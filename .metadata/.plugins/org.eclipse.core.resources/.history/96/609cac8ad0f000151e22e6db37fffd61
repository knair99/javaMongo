package com.nimma.jersey.client;

import java.net.URI;

import javax.ws.rs.client.Client;
import javax.ws.rs.client.ClientBuilder;
import javax.ws.rs.client.Entity;
import javax.ws.rs.client.WebTarget;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.UriBuilder;

import org.glassfish.jersey.client.ClientConfig;
import org.json.JSONObject;


public class Responder {

  public static void main(String[] args) {
    ClientConfig config = new ClientConfig();
    Client client = ClientBuilder.newClient(config);

    WebTarget target = client.target(getBaseURI());
    // Get XML
    String xmlResponse = target.path("rest").path("todo").request()
        .accept(MediaType.TEXT_XML).get(String.class);
    // Get XML for application
    String xmlAppResponse =target.path("rest").path("todo").request()
        .accept(MediaType.APPLICATION_XML).get(String.class);

    // For JSON response also add the Jackson libraries to your webapplication
        // In this case you would also change the client registration to
        // ClientConfig config = new ClientConfig().register(JacksonFeature.class);
        // Get JSON for application
        // System.out.println(target.path("rest").path("todo").request()
        // .accept(MediaType.APPLICATION_JSON).get(String.class));
    
    JSONObject data = new JSONObject();
    data.put("id", 1);
    data.put("data", "my_data")
   
    
    String xmlResp = target.path("rest").path("todo").request()
    		.accept(MediaType.APPLICATION_JSON).post(Entity.entity(data, MediaType.APPLICATION_JSON));
    
    System.out.println(xmlResp);
    
  }

  private static URI getBaseURI() {
    return UriBuilder.fromUri("http://localhost:8080/com.nimma.jersey.server").build();
  }

} 
